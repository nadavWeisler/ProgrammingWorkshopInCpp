==4800== Memcheck, a memory error detector
==4800== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4800== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==4800== Command: in/matrix_valid param/w1 param/w2 param/w3 param/w4 param/b1 param/b2 param/b3 param/b4
==4800== Parent PID: 4776
==4800== 
==4800== Mismatched free() / delete / delete []
==4800==    at 0x483708B: operator delete(void*, unsigned long) (vg_replace_malloc.c:585)
==4800==    by 0x1095A7: Matrix::operator=(Matrix const&) (Matrix.cpp:103)
==4800==    by 0x10AC5A: main (t_matrix_valid.cpp:45)
==4800==  Address 0x4da07c0 is 0 bytes inside a block of size 4 alloc'd
==4800==    at 0x483650F: operator new[](unsigned long) (vg_replace_malloc.c:423)
==4800==    by 0x1092E3: Matrix::Matrix(int, int) (Matrix.cpp:22)
==4800==    by 0x109351: Matrix::Matrix() (Matrix.cpp:32)
==4800==    by 0x10AC41: main (t_matrix_valid.cpp:44)
==4800== 
==4800== Mismatched free() / delete / delete []
==4800==    at 0x483708B: operator delete(void*, unsigned long) (vg_replace_malloc.c:585)
==4800==    by 0x1095A7: Matrix::operator=(Matrix const&) (Matrix.cpp:103)
==4800==    by 0x10AC73: main (t_matrix_valid.cpp:46)
==4800==  Address 0x4da0810 is 0 bytes inside a block of size 4 alloc'd
==4800==    at 0x483650F: operator new[](unsigned long) (vg_replace_malloc.c:423)
==4800==    by 0x1095E1: Matrix::operator=(Matrix const&) (Matrix.cpp:104)
==4800==    by 0x10AC5A: main (t_matrix_valid.cpp:45)
==4800== 
==4800== Mismatched free() / delete / delete []
==4800==    at 0x483708B: operator delete(void*, unsigned long) (vg_replace_malloc.c:585)
==4800==    by 0x1095A7: Matrix::operator=(Matrix const&) (Matrix.cpp:103)
==4800==    by 0x10AC8C: main (t_matrix_valid.cpp:47)
==4800==  Address 0x4da0860 is 0 bytes inside a block of size 4 alloc'd
==4800==    at 0x483650F: operator new[](unsigned long) (vg_replace_malloc.c:423)
==4800==    by 0x1095E1: Matrix::operator=(Matrix const&) (Matrix.cpp:104)
==4800==    by 0x10AC73: main (t_matrix_valid.cpp:46)
==4800== 
==4800== Mismatched free() / delete / delete []
==4800==    at 0x483708B: operator delete(void*, unsigned long) (vg_replace_malloc.c:585)
==4800==    by 0x1095A7: Matrix::operator=(Matrix const&) (Matrix.cpp:103)
==4800==    by 0x10ACA5: main (t_matrix_valid.cpp:48)
==4800==  Address 0x4da08b0 is 0 bytes inside a block of size 800 alloc'd
==4800==    at 0x483650F: operator new[](unsigned long) (vg_replace_malloc.c:423)
==4800==    by 0x1095E1: Matrix::operator=(Matrix const&) (Matrix.cpp:104)
==4800==    by 0x10AC8C: main (t_matrix_valid.cpp:47)
==4800== 
==4800== Mismatched free() / delete / delete []
==4800==    at 0x483708B: operator delete(void*, unsigned long) (vg_replace_malloc.c:585)
==4800==    by 0x1095A7: Matrix::operator=(Matrix const&) (Matrix.cpp:103)
==4800==    by 0x10B24A: main (t_matrix_valid.cpp:87)
==4800==  Address 0x4d9fcc0 is 0 bytes inside a block of size 4 alloc'd
==4800==    at 0x483650F: operator new[](unsigned long) (vg_replace_malloc.c:423)
==4800==    by 0x1092E3: Matrix::Matrix(int, int) (Matrix.cpp:22)
==4800==    by 0x109351: Matrix::Matrix() (Matrix.cpp:32)
==4800==    by 0x10A987: main (t_matrix_valid.cpp:16)
==4800== 
==4800== Mismatched free() / delete / delete []
==4800==    at 0x483708B: operator delete(void*, unsigned long) (vg_replace_malloc.c:585)
==4800==    by 0x1095A7: Matrix::operator=(Matrix const&) (Matrix.cpp:103)
==4800==    by 0x10B3A7: main (t_matrix_valid.cpp:96)
==4800==  Address 0x4d9fd60 is 0 bytes inside a block of size 800 alloc'd
==4800==    at 0x483650F: operator new[](unsigned long) (vg_replace_malloc.c:423)
==4800==    by 0x1092E3: Matrix::Matrix(int, int) (Matrix.cpp:22)
==4800==    by 0x10A9FF: main (t_matrix_valid.cpp:21)
==4800== 
==4800== 
==4800== HEAP SUMMARY:
==4800==     in use at exit: 3,816 bytes in 11 blocks
==4800==   total heap usage: 29 allocs, 18 frees, 87,164 bytes allocated
==4800== 
==4800== LEAK SUMMARY:
==4800==    definitely lost: 0 bytes in 0 blocks
==4800==    indirectly lost: 0 bytes in 0 blocks
==4800==      possibly lost: 0 bytes in 0 blocks
==4800==    still reachable: 3,816 bytes in 11 blocks
==4800==         suppressed: 0 bytes in 0 blocks
==4800== Reachable blocks (those to which a pointer was found) are not shown.
==4800== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==4800== 
==4800== For counts of detected and suppressed errors, rerun with: -v
==4800== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)
